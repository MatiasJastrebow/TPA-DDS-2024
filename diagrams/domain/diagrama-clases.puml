@startuml
'========================================== Clases de la entrega 1 ============================================='

class Heladera {
    -direccion: Direccion;
    -nombre: String;
    -capacidadMaximaViandas: Integer;
    -List<Vianda> viandas;
    -fechaDeCreacion: LocalDate;
    -ultVezActivada: LocalDate;
    -modelo: Modelo;
    -sensorMovimiento: SensorMovimiento;
    -estadoActual: Estado
    -List<Estado> estadosHeladera;

    +void agregarVianda(Vianda vianda)
    +Integer calcularMesesActiva()
    +void generarAlerta()
}

class Direccion {
    -ubicacion: String
    -longitud: Float
    -latitud: Float
    -provincia: Provincia
}

class Provincia {
    -nombreProvincia: String
    -ciudad: Ciudad
}

class Ciudad {
    -nombreCiudad: String
    -barrio: Barrio
}

class Barrio {
    -nombreBarrio: String
    -calle: String
    -numero: Integer
}

class Vianda {
    -comida: Comida
    -fechaDonacion: Date
    -colaborador: Colaborador
    -heladera: Heladera
    -calorias: Integer
    -peso: Float
    -entregada: Boolean
}

class Comida {
    -nombre: String
    -vencimiento: LocalDate
}

class Vulnerable {
    -nombre: String
    -fechaNacimiento: LocalDate
    -fechaRegistro: LocalDate
    -domicilio: Direccion
    -documento: Documento
    -List<Vulnerable> menoresAcargo
    -tarjeta: Tarjeta

    +boolean puedeUsarTarjeta(Heladera heladera)
}

class Colaborador{
    'De Persona Fisica'
    -nombre: String
    -apellido: String
    -documento: Documento

    'De Persona Juridica'
    -razonSocial: String
    -tipo: String
    -rubro: String
    -direccion: Direccion

    -contacto: Contacto
    -tipoColaborador: TipoColaborador
    -respuestaFormulario: RespuestaFormulario
    -reconocimiento: Reconocimiento

    -adapterServicioRecomendacion: AdapterServicioRecomendacion

    +boolean puedeCanjear(Oferta oferta)
    +void aumentarReconocimiento(Colaboracion colaboracion)
}

enum TipoColaborador {
    FISICO,
    JURIDICO,
    EMPRESA_ASOCIADA
}

class Formulario {
    -List<Pregunta> preguntas
}

class RespuestaFormulario {
    -nombre: String
    -descripcion: String
    -List<Respuesta> respuestas
    -formulario: Formulario
}

class Pregunta {
    -pregunta: String
    -esOpcional: Boolean
    -List<Opcion> opciones
    -tipoDeSuRespuesta: TipoPregunta
}

class Respuesta {
    -pregunta: Pregunta
    -tipoRespuesta: TipoPregunta
    -respuestaTextoLibre: String
    -List<Opcion> opciones
    -respuestaSingleChoice: Opcion
}

class Opcion {
    -opcion: String
}

enum TipoPregunta {
    MULTIPLE_CHOICE,
    SINGLE_CHOICE,
    TEXTO_LIBRE
}

class Colaboracion {
    -tipoColaboracion: TipoColaboracion

    'DONAR_DINERO'
    -fechaDonacionDinero: LocalDate
    -monto: Integer
    -frecuencia: String

    'DONAR_VIANDA'
    -List<Vianda> viandas
    -cantViandas: Integer

    'DISTRIBUIR_VIANDA'
    -heladeraOrigen: Heladera
    -heladeraDestino: Heladera
    -cantViandasDistribuidas: Integer
    -motivoDistribucion: String
    -fechaDistribucion: LocalDate

    'COLOCAR_HELADERA'
    -heladera: Heladera

    'DISTRIBUIR_TARJETAS'
    -List<Tarjeta> tarjetasEntregadas
    -cantTarjetasEntregadas: Integer

    'REALIZAR_OFERTAS'
    -List<Oferta> ofertas
}

enum TipoColaboracion {
    DONAR_DINERO,
    DONAR_VIANDA,
    DISTRIBUIR_VIANDAS,
    COLOCAR_HELADERA,
    ENTREGAR_TARJETA,
    REALIZAR_OFERTAS
}

'========================================== Clases de la entrega 2 ============================================='

class Modelo{
    -modelo: String
    -sensorTemperatura: SensorTemperatura
}

class SensorTemperatura {
    -temperaturaMinima: Float
    -temperaturaMaxima: Float
    -ultimaTemperatura: Float

    +void recibirMedicion(Heladera heladera, Float ultimaTemperatura)
    +void activarSensor(Heladera heladera))
    +void desactivarSensor(Heladera heladera))
}

class SensorMovimiento {

    +void recibirMedicion(Heladera heladera, Float lat, Float lon)
    +void activarSensor(Heladera heladera))
    +void desactivarSensor(Heladera heladera))
}

class Reconocimiento {
    -puntosPorColaborar: Float
    -formulaCalculoDePuntos: Formula

    +void sumarPuntos(Colaboracion colaboracion)
    +void restarPuntos(Float puntos)
}

interface InterfazFormula {
    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class Formula {
    -mapCalculos: EnumMap<TipoColaboracion, Function<Colaboracion, Float>>;

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoPesosDonados {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoViandasDonadas {
    Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoViandasDistribuidas {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoTarjetasRepartidas {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoHeladerasActivas {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class Tarjeta {
    -codigo: String
    -cantidadDeUsosMaxima: Integer
    -List<RegistroUso> registroUsos
    -informacionRegistro: InformacionRegistro

    +boolean puedeUtilizarse(Heladera heladera)
}

class RegistroUso {
    -fechaUtilizacion: LocalDate
    -heladera: Heladera
}

class InformacionRegistro {
    -colaborador: Colaborador
    -vulnerable: Vulnerable
}

class Tecnico {
    -nombre: String
    -apellido: String
    -documento: Documento
    -cuil: Integer
    -contacto: Contacto
    -areaDeCobertura: Ciudad
}

enum TipoDocumento {
    DNI,
    LC,
    LE
}

class Oferta {
    -nombre: String
    -puntosNecesarios: Float
    -imagenIlustrativa: Image
}

class Canje {
    -colaborador: Colaborador
    -oferta: Oferta
}

class Documento {
    -nroDocumento: Integer
    -tipoDocumento: TipoDocumento
}

class Contacto {
    -contacto: String
    -tipoContacto: TipoContacto
}

enum TipoContacto {
    TELEFONO_FIJO,
    CELULAR,
    MAIL
}

interface InterfaceAdapterServicioRecomendacion {
    +ListadoDepuntos listadoDePuntos(int lat, int lon, int rad)
}

class AdapterServicioRecomendacion{
    -instancia: AdapterServicioRecomendacion
    -urlAPI: String
    -retrofit: Retrofit 'retrofit es una clase, pero lo tomamos como tipo de dato ya que es una dependencia'

    +ListadoDepuntos listadoDePuntos(int lat, int lon, int rad)
}

class Estado{
    -estado: TipoEstado
    -fechaInicial: LocalDate
    -fechaFinal: LocalDate

    +Integer calcularMeses()
}

enum TipoEstado{
    ACTIVA,
    INACTIVA_FUNCIONAL,
    INACTIVA_TEMPERATURA,
    INACTIVA_FRAUDE,
    INACTIVA_FALLA_CONEXION
}
'================================================== Relaciones ================================================'

'DIRECCIONES'
Direccion o-- Provincia
Provincia o-- Ciudad
Ciudad o-- Barrio

'HELADERA'
Heladera o-- Direccion
Heladera <-->"*" Vianda
Heladera *-- Modelo
Heladera *-- SensorMovimiento
Heladera -->"*" Estado

'VIANDA'
Vianda *-- Comida
Vianda --> Colaborador

'MODELO'
Modelo *-- SensorTemperatura

'COLABORADOR'
Colaborador ---> Documento
Colaborador ---> Direccion
Colaborador ---> Contacto
Colaborador o--- TipoColaborador
Colaborador o--- RespuestaFormulario
Colaborador o--- Reconocimiento
Colaborador ---> AdapterServicioRecomendacion

'DOCUMENTO'
Documento o-- TipoDocumento

'CONTACTO'
Contacto o-- TipoContacto

'SERVICIO RECOMENDACION'
AdapterServicioRecomendacion --> AdapterServicioRecomendacion
AdapterServicioRecomendacion ..|> InterfaceAdapterServicioRecomendacion

'RECONOCIMIENTO'
Reconocimiento *-- Formula
Reconocimiento ..> Colaboracion

'FORMULA'
Formula ..|> InterfazFormula
Formula ..> Colaboracion
Formula ..> CalculoPesosDonados
Formula ..> CalculoViandasDonadas
Formula ..> CalculoTarjetasRepartidas
Formula ..> CalculoHeladerasActivas
Formula ..> CalculoViandasDistribuidas

'RESPUESTA FORMULARIO'
RespuestaFormulario o--"*" Respuesta
RespuestaFormulario *-- Formulario

'FORMULARIO'
Formulario o--"*" Pregunta

'PREGUNTA'
Pregunta -->"*" Opcion
Pregunta *-- TipoPregunta

'RESPUESTA'
Respuesta o-- Pregunta
Respuesta *-- TipoPregunta
Respuesta -->"*" Opcion

'COLABORACION'
Colaboracion *-- TipoColaboracion
Colaboracion -->"*" Vianda
Colaboracion --> Heladera
Colaboracion -->"*" Tarjeta
Colaboracion -->"*" Oferta

'TARJETA'
Tarjeta o---"*" RegistroUso
Tarjeta ---> InformacionRegistro
Tarjeta ...> Heladera

'REGISTRO USO'
RegistroUso *--- Heladera

'INFORMACION REGISTRO'
InformacionRegistro *--- Colaborador
InformacionRegistro *--- Vulnerable

'VULNERABLE'
Vulnerable ---> Direccion
Vulnerable ---> Documento
Vulnerable --->"*" Vulnerable
Vulnerable ---> Tarjeta
Vulnerable ..> Heladera

'TECNICO'
Tecnico *- Documento
Tecnico *-- Contacto
Tecnico *-- Ciudad

'CANJE'
Canje *-- Colaborador
Canje *-- Oferta

'CALCULOS'
CalculoPesosDonados ..> Colaboracion
CalculoViandasDonadas ..> Colaboracion
CalculoTarjetasRepartidas ..> Colaboracion
CalculoHeladerasActivas ..> Colaboracion
CalculoViandasDistribuidas ..> Colaboracion

'Estado'
Estado *-- TipoEstado

@enduml