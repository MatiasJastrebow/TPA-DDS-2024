@startuml
'========================================== Clases de la entrega 1 ============================================='

class Heladera {
    -direccion: Direccion
    -nombre: String
    -fechaDeCreacion: LocalDate

    -estaAbierta: Boolean
    -modelo: Modelo

    -List<Vianda> viandas
    -capacidadMaximaViandas: Integer

    -List<Suscripcion> suscripciones

    -estadoActual: Estado
    -List<Estado> estadosHeladera

    -List<TarjetaColaborador> tarjetasHabilitadas
    -limitador: Limitador

    +Boolean intentarAbrirCon(TarjetaColaborador tarjeta)
    +Integer calcularMesesActiva()
    +agregarVianda(Vianda vianda)
    +modificaEstado(TipoEstado estado)
}

class Direccion {
    -ubicacion: String
    -longitud: Float
    -latitud: Float
    -barrio: Barrio
}

class Barrio {
    -nombreBarrio: String
    -calle: String
    -numero: Integer
    -ciudad: Ciudad
}

class Ciudad {
    -nombreCiudad: String
    -provincia: Provincia
}

class Provincia {
    -nombreProvincia: String
}

class Vianda {
    -comida: Comida
    -fechaDonacion: LocalDate
    -colaborador: Colaborador
    -heladera: Heladera
    -calorias: Integer
    -peso: Float
    -entregada: Boolean
}

class Comida {
    -nombre: String
    -vencimiento: LocalDate
}

class Vulnerable {
    -nombre: String
    -fechaNacimiento: LocalDate
    -domicilio: Direccion
    -documento: Documento
    -List<Vulnerable> menoresAcargo
}

class Colaborador{
    'De Persona Fisica'
    -nombre: String
    -apellido: String
    -documento: Documento

    'De Persona Juridica'
    -razonSocial: String
    -tipo: String
    -rubro: String
    -direccion: Direccion

    -contacto: Contacto
    -tipoColaborador: TipoColaborador
    -reconocimiento: Reconocimiento

    -List<Colaboracion> colaboraciones;

    -adapterServicioRecomendacion: AdapterServicioRecomendacion

    +boolean puedeCanjear(Oferta oferta)
    +void aumentarReconocimiento(Colaboracion colaboracion)

    +void agregarSolicitudApertura(Heladera heladera)

    +void agregarSuscripcion(Suscripcion suscripcion)
}

enum TipoColaborador {
    FISICO,
    JURIDICO,
    EMPRESA_ASOCIADA
}

class Formulario {
    -nombre: String
    -List<Pregunta> preguntas
}

class RespuestaFormulario {
    -descripcion: String
    -List<Respuesta> respuestas
    -formulario: Formulario
    -colaborador: Colaborador
}

class Pregunta {
    -pregunta: String
    -esOpcional: Boolean
    -List<Opcion> opciones
    -tipoDeSuRespuesta: TipoPregunta
}

class Respuesta {
    -pregunta: Pregunta
    -tipoRespuesta: TipoPregunta
    -respuestaTextoLibre: String
    -List<Opcion> opciones
    -respuestaSingleChoice: Opcion
}

class Opcion {
    -opcion: String
}

enum TipoPregunta {
    MULTIPLE_CHOICE,
    SINGLE_CHOICE,
    TEXTO_LIBRE
}

class Colaboracion {
    -tipoColaboracion: TipoColaboracion
    -fechaColaboracion: LocalDate
    -colaborador: Colaborador

    -donacionDinero: DonacionDinero

    -donacionViandas: DonacionViandas

    -distribucionViandas: DistribucionViandas

    -distribucionTarjetas: DistribucionTarjetas

    -colocacionHeladera ColocacionHeladera

    -realizacionOfertas: RealizacionOfertas
}

enum TipoColaboracion {
    DONAR_DINERO,
    DONAR_VIANDA,
    DISTRIBUIR_VIANDAS,
    COLOCAR_HELADERA,
    ENTREGAR_TARJETA,
    REALIZAR_OFERTAS
}

class DonacionDinero {
    -montoDonado: Integer
    -frecuenciaDonacion: String
}

class DonacionViandas {
    -viandasDonadas: List<Vianda>
    -cantViandas: Integer
}

class DistribucionViandas {
    -heladeraOrigen: Heladera
    -heladeraDestino: Heladera
    -cantViandasDistribuidas: Integer
    -motivoDistribucion: String
}

class DistribucionTarjetas {
    -tarjetasEntregadas: List<TarjetaVulnerable>
    -cantTarjetasEntregadas: Integer
}

class ColocacionHeladera {
    -heladeraColocada: Heladera
}

class RealizacionOfertas {
    -List<Oferta> ofertasRealizadas
}

'========================================== Clases de la entrega 2 ============================================='

class Modelo{
    -nombre: String
    -temperaturaMinima: Float
    -temperaturaMaxima: Float
}

class SensorTemperatura{
    -id: Integer
    -List<MedicionSensor> mediciones
    -heladera: Heladera

    +Boolean comprobarTemperatura(Float temperatura)
    +void recibirMedicion(MedicionSensor medicion)
    +void desactivarHeladera(Incidente incidente)
    +void activarHeladera()
}

class MedicionSensor{
    -valorNumerico: Float
    -fecha: LocalDateTime
    -heladera: Heladera
}

class SensorMovimiento {
    -id: Integer
    -List<MedicionSensor> mediciones
    -heladera: Heladera

    +Boolean debeActivarSensor()
    +void recibirMedicion(MedicionSensor medicion)
    +void desactivarHeladera(Incidente incidente)
    +void activarHeladera()
}

class Reconocimiento {
    -puntosPorColaborar: Float
    -formulaCalculoDePuntos: Formula

    +void sumarPuntos(Colaboracion colaboracion)
    +void restarPuntos(Float puntos)
}

interface InterfazFormula {
    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class Formula {
    -mapCalculos: EnumMap<TipoColaboracion, Function<Colaboracion, Float>>;

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoPesosDonados {
    -Float coeficiente

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoViandasDonadas {
    Float coeficiente

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoViandasDistribuidas {
    -Float coeficiente

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoTarjetasRepartidas {
    -Float coeficiente

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoHeladerasActivas {
    -Float coeficiente

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class TarjetaVulnerable {
    -codigo: String
    -fechaAlta: LocalDate
    -cantidadDeUsosMaxima: Integer
    -List<UsoTarjetaVulnerable> registroUsos
    -registroVulnerable: RegistroVulnerable

    +Boolean puedeUtilizarse(Heladera heladera)
}

class UsoTarjetaVulnerable {
    -fechaUtilizacion: LocalDate
    -heladera: Heladera
    -tarjetaVulnerable: TarjetaVulnerable
}

class RegistroVulnerable {
    -colaborador: Colaborador
    -vulnerable: Vulnerable
    -fechaRegistro: LocalDate
}

class Tecnico {
    -nombre: String
    -apellido: String
    -documento: Documento
    -cuil: Integer
    -contacto: Contacto
    -areaDeCobertura: Ciudad

    +void puedeVisitarHeladera(Heladera heladera)
}

enum TipoDocumento {
    DNI,
    LC,
    LE
}

class Oferta {
    -nombre: String
    -puntosNecesarios: Float
    -imagenIlustrativa: String
    -ofertante: Colaborador
}

class Canje {
    -colaborador: Colaborador
    -oferta: Oferta
}

class Documento {
    -nroDocumento: Integer
    -tipoDocumento: TipoDocumento
}

class Contacto {
    -contacto: String
    -tipoContacto: TipoContacto
}

enum TipoContacto {
    TELEFONO_FIJO,
    CELULAR,
    MAIL,
}

interface InterfaceAdapterServicioRecomendacion {
    +ListadoPuntos puntos(String lat, String lon, String rad)
}

class AdapterServicioRecomendacion{
    -instancia: AdapterServicioRecomendacion
    -urlAPI: String
    -retrofit: Retrofit 'retrofit es una clase, pero lo tomamos como tipo de dato ya que es una dependencia'

    +ListadoPuntos puntos(String lat, String lon, String rad)
}

class ListadoPuntos {
    +puntos: List<Punto>
    +cantidad: Integer
    +inicio: Integer
    +total: Integer
}

class Punto {
    +lon: String
    +lat: String
    +referencia: String
}

class Estado{
    -estado: TipoEstado
    -fechaInicial: LocalDate
    -fechaFinal: LocalDate

    +Integer calcularMeses()
}

enum TipoEstado{
    ACTIVA,
    INACTIVA_FUNCIONAL,
    INACTIVA_TEMPERATURA,
    INACTIVA_FRAUDE,
    INACTIVA_FALLA_CONEXION
    INACTIVA_FALLA_TECNICA
}

'========================================== Clases de la entrega 3 ============================================='

class TarjetaColaborador {
    -codigo: String
    -List<UsoTarjetaColaborador> usos
    -colaborador: Colaborador
}

class UsoTarjetaColaborador {
    -apertura: Apertura
    -heladera: Heladera
    -tarjetaColaborador: TarjetaColaborador
}

class Apertura {
    -fechaSolicitud: LocalDateTime
    -fechaApertura: LocalDateTime
}

class Limitador {
    -unidad: ChronoUnit
    -tiempoLimite: Float

    +Boolean menorAlLimite(Duration duracion)
}

class Incidente {
    -heladera: Heladera
    -tipoIncidente: TipoIncidente
    -momentoIncidente: LocalDateTime

    'Alerta'
    -tipoAlerta: TipoEstado

    'Falla Tecnica'
    -colaborador: Colaborador
    -descripcionIncidente: String
    -fotoIncidente: String
}

enum TipoIncidente {
    ALERTA,
    FALLA_TECNICA
}

class VisitaTecnica {
    -Incidente: incidente
    -fechaVisita: LocalDate
    -trabajoRealizado: String
    -fotoVisita: String
    -incidenteSolucionado: Boolean
    -tecnico: Tecnico
}

abstract class Suscripcion {
    #colaborador: Colaborador
    #heladera: Heladera
    #senderInterface: SenderInterface
    #tipo: TipoSuscripcion

    +intentarNotificar()
    +notificar()
    +seCumpleCondicion()
}

enum TipoSuscripcion {
    QUEDAN_N_VIANDAS,
    FALTAN_N_VIANDAS,
    DESPERFECTO
}

class QuedanViandas {
    -viandasDisponibles: Integer

    +intentarNotificar()
    +notificar()
    +seCumpleCondicion()
}

class FaltanViandas {
    -viandasFaltantes: Integer

    +intentarNotificar()
    +notificar()
    +seCumpleCondicion()
}

class Desperfecto {
    -buscadorHeladerasFrecuentes: BuscadorHeladerasFrecuentes

    +intentarNotificar()
    +notificar()
    +seCumpleCondicion()
}

class GeneradorReporte {
    -startX: Integer
    -startY: Integer
    -leading: Integer
    -maxLines: Integer
    -currentLines: Integer
}

class ReporteHeladera {
    -heladera: Heladera
    -fallas: Integer
    -viandasColocadas: Integer
    -viandasRetiradas: Integer
    -List<ViandasPorColaborador> viandasPorColaborador
    -path: String
}

class ViandasPorColaborador {
    -viandas: Integer
    -colaborador: Colaborador
}

interface SenderInterface {
    +enviar(Mensaje men, Destinatario dest);
}

class Mensaje {
    -asunto: String
    -cuerpo: String
}

class Destinatario {
    -HashMap<TipoContacto, String> mediosDeContacto
}

class BuscadorTecnicosCercanos {
    -List<Tecnico> buscarTecnicosCercanosA(Heladera heladera)
}

class BuscadorHeladerasFrecuentes {
    -cantidadRequerida: Integer

    +List<Heladera> heladerasFrecuentes(Colaborador colaborador)
}

'================================================== Relaciones ================================================'

'DIRECCIONES'
Barrio --o Direccion
Provincia --o Ciudad
Ciudad --o Barrio

'HELADERA'
Heladera o-- Direccion
Heladera -->"*" Vianda
Heladera *-- Modelo
Heladera -->"*" Suscripcion
Heladera -->"*" Estado
Heladera ..> TipoEstado
Heladera *-- Limitador
Heladera -->"*" TarjetaColaborador

'VIANDA'
Vianda *-- Comida
Vianda --> Colaborador
Vianda --> Heladera

'SENSORES'
SensorMovimiento *-- Heladera
SensorTemperatura *-- Heladera
SensorTemperatura -->"*"MedicionSensor
SensorMovimiento -->"*"MedicionSensor
SensorMovimiento ..> Incidente
SensorTemperatura ..> Incidente
MedicionSensor --> Heladera

'COLABORADOR'
Colaborador ---> Documento
Colaborador ---> Direccion
Colaborador ---> Contacto
Colaborador o--- TipoColaborador
Colaborador o--- Reconocimiento
Colaborador ---> AdapterServicioRecomendacion
Colaborador ..> Heladera
Colaborador -->"*" Colaboracion

'DOCUMENTO'
Documento o-- TipoDocumento

'CONTACTO'
Contacto o-- TipoContacto

'SERVICIO RECOMENDACION'
AdapterServicioRecomendacion --> AdapterServicioRecomendacion
AdapterServicioRecomendacion ..|> InterfaceAdapterServicioRecomendacion
InterfaceAdapterServicioRecomendacion ..> ListadoPuntos
ListadoPuntos -->"*" Punto

'RECONOCIMIENTO'
Reconocimiento *-- Formula
Reconocimiento ..> Colaboracion

'FORMULA'
Formula ..|> InterfazFormula
Formula ..> Colaboracion
Formula ..> CalculoPesosDonados
Formula ..> CalculoViandasDonadas
Formula ..> CalculoTarjetasRepartidas
Formula ..> CalculoHeladerasActivas
Formula ..> CalculoViandasDistribuidas

'RESPUESTA FORMULARIO'
RespuestaFormulario o--"*" Respuesta
RespuestaFormulario *-- Formulario
RespuestaFormulario *-- Colaborador

'FORMULARIO'
Formulario o--"*" Pregunta

'PREGUNTA'
Pregunta -->"*" Opcion
Pregunta *-- TipoPregunta

'RESPUESTA'
Respuesta o-- Pregunta
Respuesta *-- TipoPregunta
Respuesta -->"*" Opcion

'COLABORACION'
Colaboracion *-- TipoColaboracion
Colaboracion --> DonacionViandas
Colaboracion --> DistribucionViandas
Colaboracion --> DistribucionTarjetas
Colaboracion --> RealizacionOfertas
Colaboracion --> ColocacionHeladera
Colaboracion --> DonacionDinero
Colaboracion --> Colaborador

DonacionViandas -->"*" Vianda
DistribucionViandas --> Heladera
DistribucionTarjetas -->"*" TarjetaVulnerable
RealizacionOfertas -->"*" Oferta
Oferta --> Colaborador
ColocacionHeladera --> Heladera

'TARJETA'
TarjetaVulnerable o---"*" UsoTarjetaVulnerable
TarjetaVulnerable ---> InformacionRegistro
TarjetaVulnerable ...> Heladera

'USO TARJETA VULNERABLE'
UsoTarjetaVulnerable *--- Heladera
UsoTarjetaVulnerable --> TarjetaVulnerable

'INFORMACION REGISTRO'
RegistroVulnerable *--- Colaborador
RegistroVulnerable *--- Vulnerable

'VULNERABLE'
Vulnerable ---> Direccion
Vulnerable ---> Documento
Vulnerable --->"*" Vulnerable
Vulnerable ..> Heladera

'TECNICO'
Tecnico *- Documento
Tecnico *-- Contacto
Tecnico *-- Ciudad
Tecnico -->"*" VisitaTecnica
Tecnico ..> Heladera

'CANJE'
Canje *-- Colaborador
Canje *-- Oferta

'CALCULOS'
CalculoPesosDonados ..> Colaboracion
CalculoViandasDonadas ..> Colaboracion
CalculoTarjetasRepartidas ..> Colaboracion
CalculoHeladerasActivas ..> Colaboracion
CalculoViandasDistribuidas ..> Colaboracion

'ESTADO'
Estado *-- TipoEstado

'TARJETA DEL COLABORADOR'
TarjetaColaborador -->"*" UsoTarjetaColaborador
TarjetaColaborador *-- Colaborador

'USO TARJETA DEL COLABORADOR'
UsoTarjetaColaborador --> Apertura
UsoTarjetaColaborador o-- Heladera
UsoTarjetaColaborador --> TarjetaColaborador

'INCIDENTE'
Incidente o-- Heladera
Incidente *-- TipoIncidente
Incidente --> TipoEstado
Incidente --> Colaborador

'VISITA TECNICA'
VisitaTecnica o-- Incidente
VisitaTecnica --> Tecnico

'REPORTES'
ReporteHeladera o-- Heladera
ReporteHeladera -->"*" ViandasPorColaborador
ViandasPorColaborador o-- Colaborador

'SUSCRIPCION'
Desperfecto --|> Suscripcion
QuedanViandas --|> Suscripcion
FaltanViandas --|> Suscripcion
Suscripcion --> TipoSuscripcion
Suscripcion --> SenderInterface
Suscripcion --> Colaborador
Suscripcion --> Heladera

'DESPERFECTO'

Desperfecto *-- BuscadorHeladerasFrecuentes

'SENDER'
SenderInterface ..> Mensaje
SenderInterface ..> Destinatario

'DESTINATARIO'
Destinatario --> TipoContacto

'BUSCADOR TECNICOS'
BuscadorTecnicosCercanos ..> Heladera
BuscadorTecnicosCercanos ..> Tecnico

'BUSCADOR HELADERAS'
BuscadorHeladerasFrecuentes ..> Colaborador

'GENERADOR REPORTES'
GeneradorReporte ..> Heladera

@enduml
