@startuml
'========================================== Clases de la entrega 1 ============================================='

class Heladera {
    -direccion: Direccion
    -nombre: String
    -capacidadMaximaViandas: Integer
    -List<Vianda> viandas
    -fechaDeCreacion: LocalDate
    -ultVezActivada: LocalDate

    -modelo: Modelo
    -sensorMovimiento: SensorMovimiento

    -estadoActual: Estado
    -List<Estado> estadosHeladera

    -List<TarjetaColaborador> tarjetasHabilitadas
    -limiteDeTiempo: Float
    -estaAbierta: Boolean

    +void agregarVianda(Vianda vianda)
    +Integer calcularMesesActiva()
    +void imprimirAlerta()
    +void modificarEstado(TipoEstado estado)
    +void puedeAbrirseCon(TarjetaColaborador tarjeta)
    '+void cerrarHeladera(TarjetaColaborador tarjeta) TODO Ver de incluir en la Apertura'
}

class Direccion {
    -ubicacion: String
    -longitud: Float
    -latitud: Float
    -provincia: Provincia
}

class Provincia {
    -nombreProvincia: String
    -ciudad: Ciudad
}

class Ciudad {
    -nombreCiudad: String
    -barrio: Barrio
}

class Barrio {
    -nombreBarrio: String
    -calle: String
    -numero: Integer
}

class Vianda {
    -comida: Comida
    -fechaDonacion: Date
    -colaborador: Colaborador
    -heladera: Heladera
    -calorias: Integer
    -peso: Float
    -entregada: Boolean
}

class Comida {
    -nombre: String
    -vencimiento: LocalDate
}

class Vulnerable {
    -nombre: String
    -fechaNacimiento: LocalDate
    -fechaRegistro: LocalDate
    -domicilio: Direccion
    -documento: Documento
    -List<Vulnerable> menoresAcargo
    -tarjeta: TarjetaVulnerable

    +boolean puedeUsarTarjeta(Heladera heladera)
}

'TODO revisar datos opcionales con builder'
class Colaborador{
    'De Persona Fisica'
    -nombre: String
    -apellido: String
    -documento: Documento

    'De Persona Juridica'
    -razonSocial: String
    -tipo: String
    -rubro: String
    -direccion: Direccion

    -contacto: Contacto
    -tipoColaborador: TipoColaborador
    -respuestaFormulario: RespuestaFormulario
    -reconocimiento: Reconocimiento

    -adapterServicioRecomendacion: AdapterServicioRecomendacion

    -tarjeta: TarjetaColaborador

    -suscripcion: Suscripcion

    +boolean puedeCanjear(Oferta oferta)
    +void aumentarReconocimiento(Colaboracion colaboracion)

    +void solicitarAperturaDeHeladera()
    +void reportarFallaTecnica(Heladera heladera)
}

enum TipoColaborador {
    FISICO,
    JURIDICO,
    EMPRESA_ASOCIADA
}

class Formulario {
    -List<Pregunta> preguntas
}

class RespuestaFormulario {
    -nombre: String
    -descripcion: String
    -List<Respuesta> respuestas
    -formulario: Formulario
}

class Pregunta {
    -pregunta: String
    -esOpcional: Boolean
    -List<Opcion> opciones
    -tipoDeSuRespuesta: TipoPregunta
}

class Respuesta {
    -pregunta: Pregunta
    -tipoRespuesta: TipoPregunta
    -respuestaTextoLibre: String
    -List<Opcion> opciones
    -respuestaSingleChoice: Opcion
}

class Opcion {
    -opcion: String
}

enum TipoPregunta {
    MULTIPLE_CHOICE,
    SINGLE_CHOICE,
    TEXTO_LIBRE
}

class Colaboracion {
    -tipoColaboracion: TipoColaboracion

    'DONAR_DINERO'
    -fechaDonacionDinero: LocalDate
    -monto: Integer
    -frecuencia: String

    'DONAR_VIANDA'
    -List<Vianda> viandas
    -cantViandas: Integer

    'DISTRIBUIR_VIANDA'
    -heladeraOrigen: Heladera
    -heladeraDestino: Heladera
    -cantViandasDistribuidas: Integer
    -motivoDistribucion: String
    -fechaDistribucion: LocalDate

    'COLOCAR_HELADERA'
    -heladera: Heladera

    'DISTRIBUIR_TARJETAS'
    -List<TarjetaVulnerable> tarjetasEntregadas
    -cantTarjetasEntregadas: Integer

    'REALIZAR_OFERTAS'
    -List<Oferta> ofertas
}

enum TipoColaboracion {
    DONAR_DINERO,
    DONAR_VIANDA,
    DISTRIBUIR_VIANDAS,
    COLOCAR_HELADERA,
    ENTREGAR_TARJETA,
    REALIZAR_OFERTAS
}

'========================================== Clases de la entrega 2 ============================================='

class Modelo{
    -modelo: String
    -sensorTemperatura: SensorTemperatura
}

class SensorTemperatura {
    -temperaturaMinima: Float
    -temperaturaMaxima: Float
    -ultimaTemperatura: Float

    +void recibirMedicion(Heladera heladera, Float ultimaTemperatura)
    +void activarSensor(Heladera heladera)
    +void desactivarHeladera(Heladera heladera)
    +void activarHeladera(Heladera heladera)
}

class SensorMovimiento {
    +void activarSensor(Heladera heladera)
    +void desactivarHeladera(Heladera heladera)
    +void activarHeladera(Heladera heladera)
}

class Reconocimiento {
    -puntosPorColaborar: Float
    -formulaCalculoDePuntos: Formula

    +void sumarPuntos(Colaboracion colaboracion)
    +void restarPuntos(Float puntos)
}

interface InterfazFormula {
    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class Formula {
    -mapCalculos: EnumMap<TipoColaboracion, Function<Colaboracion, Float>>;

    +Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoPesosDonados {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoViandasDonadas {
    Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoViandasDistribuidas {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoTarjetasRepartidas {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class CalculoHeladerasActivas {
    -Float coeficiente

    +public Float calcularPuntosDe(Colaboracion colaboracion)
}

class TarjetaVulnerable {
    -codigo: String
    -cantidadDeUsosMaxima: Integer
    -List<RegistroUso> registroUsos
    -informacionRegistro: InformacionRegistro

    +boolean puedeUtilizarse(Heladera heladera)
}

class RegistroUso {
    -fechaUtilizacion: LocalDate
    -heladera: Heladera
}

class InformacionRegistro {
    -colaborador: Colaborador
    -vulnerable: Vulnerable
}

class Tecnico {
    -nombre: String
    -apellido: String
    -documento: Documento
    -cuil: Integer
    -contacto: Contacto
    -areaDeCobertura: Ciudad
    -List<VisitaTecnica> visitasTecnicas
}

enum TipoDocumento {
    DNI,
    LC,
    LE
}

class Oferta {
    -nombre: String
    -puntosNecesarios: Float
    -imagenIlustrativa: Image
}

class Canje {
    -colaborador: Colaborador
    -oferta: Oferta
}

class Documento {
    -nroDocumento: Integer
    -tipoDocumento: TipoDocumento
}

class Contacto {
    -contacto: String
    -tipoContacto: TipoContacto
}

enum TipoContacto {
    TELEFONO_FIJO,
    CELULAR,
    MAIL,
}

interface InterfaceAdapterServicioRecomendacion {
    +ListadoDepuntos listadoDePuntos(int lat, int lon, int rad)
}

class AdapterServicioRecomendacion{
    -instancia: AdapterServicioRecomendacion
    -urlAPI: String
    -retrofit: Retrofit 'retrofit es una clase, pero lo tomamos como tipo de dato ya que es una dependencia'

    +ListadoDepuntos listadoDePuntos(int lat, int lon, int rad)
}

class Estado{
    -estado: TipoEstado
    -fechaInicial: LocalDate
    -fechaFinal: LocalDate

    +Integer calcularMeses()
}

enum TipoEstado{
    ACTIVA,
    INACTIVA_FUNCIONAL,
    INACTIVA_TEMPERATURA,
    INACTIVA_FRAUDE,
    INACTIVA_FALLA_CONEXION
}

'========================================== Clases de la entrega 3 ============================================='

class TarjetaColaborador {
    -String codigo
    -List<UsoTarjetaColaborador> usos
}

class UsoTarjetaColaborador {
    -solicitud: SolicitudApertura
    -apertura: Apertura
    -heladera: Heladera
}

class SolicitudApertura {
    -fechaSolicitud: LocalDateTime
}

class Apertura {
    -solicitud: SolicitudApertura
    -fechaApertura: LocalDateTime
}

'TODO implementar datos opcionales con builder en implementacion'
class Incidente {
    -heladera: Heladera
    -tipoIncidente: TipoIncidente
    -momentoIncidente: LocalDateTime

    'Alerta'
    -tipoAlerta: TipoEstado

    'Falla Tecnica'
    -colaborador: Colaborador
    -descripcionIncidente: String
    -fotoIncidente: Image
}

enum TipoIncidente {
    ALERTA,
    FALLA_TECNICA
}

class VisitaTecnica {
    -Incidente: incidente
    -fechaVisita: LocalDate
    -trabajoRealizado: String
    -fotoVisita: Image
    -incidenteSolucionado: Boolean
}

'TODO no olvidarse las relaciones de aca para abajo'
class Suscripcion {
    -heladera: Heladera
    -quedanViandas: QuedanViandas
    -faltanViandas: FaltanViandas
    -desperfecto: Desperfecto
    -notificador: SenderInterface
}

enum TipoNotificacion {
    QUEDAN_VIANDAS,
    FALTAN_VIANDAS,
    DESPERFECTO
}

class QuedanViandas {
    -viandasDisponibles: Integer
}

class FaltanViandas {
    -viandasFaltantes: Integer
}

class Desperfecto {
    -List<Heladera> heladerasSugeridas
}

class ReporteGeneral {
    -List<ReporteHeladera> reportes
}

class ReporteHeladera {
    -heladera: Heladera
    -fallas: Integer
    -viandasColocadas: Integer
    -viandasRetiradas: Integer
    -List<ViandasPorColaborador> viandasPorColaborador
}

class ViandasPorColaborador {
    -viandas: Integer
    -colaborador: Colaborador
}

'================================================== Relaciones ================================================'

'DIRECCIONES'
Direccion o-- Provincia
Provincia o-- Ciudad
Ciudad o-- Barrio

'HELADERA'
Heladera o-- Direccion
Heladera <-->"*" Vianda
Heladera *-- Modelo
Heladera *-- SensorMovimiento
Heladera -->"*" Estado
Heladera -->"*" TarjetaColaborador

'VIANDA'
Vianda *-- Comida
Vianda --> Colaborador

'MODELO'
Modelo *-- SensorTemperatura

'SENSORES'
SensorMovimiento ..> Heladera
SensorTemperatura ..> Heladera

'COLABORADOR'
Colaborador ---> Documento
Colaborador ---> Direccion
Colaborador ---> Contacto
Colaborador o--- TipoColaborador
Colaborador o--- RespuestaFormulario
Colaborador o--- Reconocimiento
Colaborador ---> AdapterServicioRecomendacion
Colaborador --> TarjetaColaborador
Colaborador ..> Heladera
Colaborador --> Suscripcion
Colaborador ..> TipoNotificacion

'DOCUMENTO'
Documento o-- TipoDocumento

'CONTACTO'
Contacto o-- TipoContacto

'SERVICIO RECOMENDACION'
AdapterServicioRecomendacion --> AdapterServicioRecomendacion
AdapterServicioRecomendacion ..|> InterfaceAdapterServicioRecomendacion

'RECONOCIMIENTO'
Reconocimiento *-- Formula
Reconocimiento ..> Colaboracion

'FORMULA'
Formula ..|> InterfazFormula
Formula ..> Colaboracion
Formula ..> CalculoPesosDonados
Formula ..> CalculoViandasDonadas
Formula ..> CalculoTarjetasRepartidas
Formula ..> CalculoHeladerasActivas
Formula ..> CalculoViandasDistribuidas

'RESPUESTA FORMULARIO'
RespuestaFormulario o--"*" Respuesta
RespuestaFormulario *-- Formulario

'FORMULARIO'
Formulario o--"*" Pregunta

'PREGUNTA'
Pregunta -->"*" Opcion
Pregunta *-- TipoPregunta

'RESPUESTA'
Respuesta o-- Pregunta
Respuesta *-- TipoPregunta
Respuesta -->"*" Opcion

'COLABORACION'
Colaboracion *-- TipoColaboracion
Colaboracion -->"*" Vianda
Colaboracion --> Heladera
Colaboracion -->"*" TarjetaVulnerable
Colaboracion -->"*" Oferta

'TARJETA'
TarjetaVulnerable o---"*" RegistroUso
TarjetaVulnerable ---> InformacionRegistro
TarjetaVulnerable ...> Heladera

'REGISTRO USO'
RegistroUso *--- Heladera

'INFORMACION REGISTRO'
InformacionRegistro *--- Colaborador
InformacionRegistro *--- Vulnerable

'VULNERABLE'
Vulnerable ---> Direccion
Vulnerable ---> Documento
Vulnerable --->"*" Vulnerable
Vulnerable ---> TarjetaVulnerable
Vulnerable ..> Heladera

'TECNICO'
Tecnico *- Documento
Tecnico *-- Contacto
Tecnico *-- Ciudad
Tecnico -->"*" VisitaTecnica

'CANJE'
Canje *-- Colaborador
Canje *-- Oferta

'CALCULOS'
CalculoPesosDonados ..> Colaboracion
CalculoViandasDonadas ..> Colaboracion
CalculoTarjetasRepartidas ..> Colaboracion
CalculoHeladerasActivas ..> Colaboracion
CalculoViandasDistribuidas ..> Colaboracion

'ESTADO'
Estado *-- TipoEstado

'TARJETA DEL COLABORADOR'
TarjetaColaborador -->"*" UsoTarjetaColaborador

'USO TARJETA DEL COLABORADOR'
UsoTarjetaColaborador *-- SolicitudApertura
UsoTarjetaColaborador --> Apertura
UsoTarjetaColaborador o-- Heladera

'APERTURA'
Apertura o-- SolicitudApertura

'INCIDENTE'
Incidente o-- Heladera
Incidente *-- TipoIncidente
Incidente --> TipoEstado
Incidente --> Colaborador

'VISITA TECNICA'
VisitaTecnica o-- Incidente

'REPORTES'
ReporteGeneral -->"*" ReporteHeladera
ReporteHeladera o-- Heladera
ReporteHeladera -->"*" ViandasPorColaborador
ViandasPorColaborador o-- Colaborador

'SUSCRIPCION'
Suscripcion o-- Heladera
Suscripcion o-- SenderInterface
Suscripcion --> QuedanViandas
Suscripcion --> FaltanViandas
Suscripcion --> Desperfecto
Suscripcion ..> TipoNotificacion

'NOTIFICACIONES'
Desperfecto -->"*" Heladera

@enduml